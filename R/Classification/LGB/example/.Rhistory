setwd("~/GitHub/2econsulting/Kaggle/R/Classification/XGB/example")
# title : homecredit_w_lightgbm
# author : jacob
# library
setwd("~/GitHub/2econsulting/Kaggle/R/Classification/LGB/example")
options(scipen = 999)
rm(list=ls())
gc(reset=TRUE)
library(rAutoFE)
library(data.table)
library(e1071)
library(caret)
library(Metrics)
library(lightgbm)
source("../tuneLGB.R")
source("../cvpredictLGB.R")
# read data
data = fread('~/Kaggle/homecredit/input/will/will_train.csv')
test = fread('~/Kaggle/homecredit/input/will/will_test.csv')
sample = fread('~/Kaggle/homecredit/input/willl/sample_submission.csv')
sample = fread('~/Kaggle/homecredit/input/wil/sample_submission.csv')
sample = fread('~/Kaggle/homecredit/input/will/sample_submission.csv')
# ..
data$SK_ID_CURR <- NULL
test$SK_ID_CURR <- NULL
names <- which(sapply(data, class) != "numeric")
data[, (names) := lapply(.SD, as.numeric), .SDcols = names]
# ..
data[is.na(data)]<- 0
test[is.na(test)]<- 0
# ------------------------
#  optimal Depth Range
# ------------------------
params <- expand.grid(
max_depth = c(2,3,4)
)
optimalDepthRange <- tuneLGB(data, y="TARGET", params=params, cv=3, max_model=nrow(params))
# title : homecredit_w_lightgbm
# author : jacob
# library
setwd("~/GitHub/2econsulting/Kaggle/R/Classification/LGB/example")
options(scipen = 999)
rm(list=ls())
gc(reset=TRUE)
library(rAutoFE)
library(data.table)
library(e1071)
library(caret)
library(Metrics)
library(lightgbm)
source("../tuneLGB.R")
source("../cvpredictLGB.R")
# read data
data = fread('~/Kaggle/homecredit/input/will/will_train.csv')
test = fread('~/Kaggle/homecredit/input/will/will_test.csv')
sample = fread('~/Kaggle/homecredit/input/will/sample_submission.csv')
# ..
data$SK_ID_CURR <- NULL
test$SK_ID_CURR <- NULL
names <- which(sapply(data, class) != "numeric")
data[, (names) := lapply(.SD, as.numeric), .SDcols = names]
# ..
data[is.na(data)]<- 0
test[is.na(test)]<- 0
# ------------------------
#  optimal Depth Range
# ------------------------
params <- expand.grid(
max_depth = c(2,3)
)
optimalDepthRange <- tuneLGB(data, y="TARGET", params=params, cv=3, max_model=nrow(params))
optimalDepthRange$scores
# ------------------------
# optimal hyper-params
# ------------------------
params <- expand.grid(
max_depth = head(optimalDepthRange$scores$max_depth, 3),
learning_rate = seq(0.01, 1, 0.3),
subsample = seq(0.6, 1, 0.9),
colsample_bytree = seq(0.5, 1, 0.1),
min_child_weight = seq(1, 40, 1),
max_delta_step = seq(1, 10, 1)
)
optimalParams <- tuneLGB(data, y="TARGET", params=params, cv=5, max_model=3)
optimalParams$scores
# ------------------------
# cvpredict catboost
# ------------------------
params = as.list(head(optimalParams$scores[names(params)],1))
output <- cvpredictLGB(data, test, k=5, y="TARGET", params=params)
output$crossvalidation_score
output$cvpredict_score
output$ztable
length(output$ztable)
fwrite(output$ztable, '~/Kaggle/homecredit/ztable/will_ztable.csv')
fwrite(as.data.frame(ztable=output$ztable), '~/Kaggle/homecredit/ztable/will_ztable.csv')
output$ztable
fwrite(data.frame(ztable=output$ztable), '~/Kaggle/homecredit/ztable/will_ztable.csv')
fwrite(data.frame(ztable=output$ztable), '~/Kaggle/homecredit/ztable/will_ztable.csv')
fwrite(sample, "./Kaggle/homecredit/output/sub01.csv")
fwrite(sample, "~/Kaggle/homecredit/output/sub01.csv")
output$pred
sample$TARGET <- ifelse(output$pred>0.5,1,0)
fwrite(sample, "~/Kaggle/homecredit/output/sub01.csv")
tmp = fread("~/Kaggle/homecredit/output/submission.csv")
tmp$TARGET
sample$TARGET <- output$pred
fwrite(sample, "~/Kaggle/homecredit/output/sub01.csv")
fwrite(sample, "~/Kaggle/homecredit/output/submission01.csv")
tmp1 = fread("~/Kaggle/homecredit/output/submission01.csv")
tmp2 = fread("~/Kaggle/homecredit/output/submission.csv")
tmp1$TARGET
str(tmp1)
output$crossvalidation_score
output$cvpredict_score
range(output$pred)
which(output$pred>1)
sample$TARGET[which(sample$TARGET>1)] <- 1
fwrite(sample, "~/Kaggle/homecredit/output/submission01.csv")
# title : homecredit_w_lightgbm
# author : jacob
# library
setwd("~/GitHub/2econsulting/Kaggle/R/Classification/LGB/example")
options(scipen = 999)
rm(list=ls())
gc(reset=TRUE)
library(rAutoFE)
library(data.table)
library(e1071)
library(caret)
library(Metrics)
library(lightgbm)
source("../tuneLGB.R")
source("../cvpredictLGB.R")
# read data
data = fread('~/Kaggle/homecredit/input/will/will_train.csv')
test = fread('~/Kaggle/homecredit/input/will/will_test.csv')
sample = fread('~/Kaggle/homecredit/input/will/sample_submission.csv')
# ..
data$SK_ID_CURR <- NULL
test$SK_ID_CURR <- NULL
names <- which(sapply(data, class) != "numeric")
data[, (names) := lapply(.SD, as.numeric), .SDcols = names]
# ..
data[is.na(data)] <- 0
test[is.na(test)] <- 0
# title : homecredit_w_lightgbm
# author : jacob
# library
setwd("~/GitHub/2econsulting/Kaggle/R/Classification/LGB/example")
options(scipen = 999)
rm(list=ls())
gc(reset=TRUE)
library(rAutoFE)
library(data.table)
library(e1071)
library(caret)
library(Metrics)
library(lightgbm)
source("../tuneLGB.R")
source("../cvpredictLGB.R")
# read data
data = fread('~/Kaggle/homecredit/input/will/will_train.csv')
test = fread('~/Kaggle/homecredit/input/will/will_test.csv')
sample = fread('~/Kaggle/homecredit/input/will/sample_submission.csv')
# ..
data$SK_ID_CURR <- NULL
test$SK_ID_CURR <- NULL
names <- which(sapply(data, class) != "numeric")
data[, (names) := lapply(.SD, as.numeric), .SDcols = names]
# ..
print(sum(is.na(data)))
catboost.caret
params
sample(1)
sample(100,1)
paste0("~/Kaggle/homecredit/output/submission",sample(100,1),".csv")
paste0("~/Kaggle/homecredit/output/lgb",sample(100,1),".csv")
